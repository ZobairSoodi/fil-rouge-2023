/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 public/3D_assets/Avatar.glb
*/

import React, { useEffect, useRef } from 'react'
import { useGLTF, useAnimations, useTexture } from '@react-three/drei'
import { useCharacterAnimations } from "../Context/CharacterAnimationsContext"

const Avatar = (props) => {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/3D_assets/Avatar.glb')
  const texturelizard_head = useTexture({map:"/textures/lizard_head_BaseColor.png"})
  const texturelizard_eye = useTexture("/textures/lizard_eye.png")
  const { setAnimations, animationIndex } = useCharacterAnimations();
  const { actions, names } = useAnimations(animations, group)
  const jacket = useTexture({
    map: '/textures/lizard_lizard_jacket_basecolor_720.png',
  });
  const pants = useTexture({
    map: '/textures/lizard_lizard_pants_BaseColor.png',
    //normalMap: '/textures/lizard_lizard_pants_Normal.png',
    //aoMap: '/textures/lizard_lizard_pants_Normal.png',
    //roughnessMap:'/textures/lizard_lizard_pants_Normal.png'
  });
  const shoes=useTexture({
    map: '/textures/lizard_lizard_shoes_BaseColor.png',
    normalMap: '/textures/lizard_lizard_pants_Normal.png',
    //displacementMap: '/textures/lizard_lizard_shoes_Grayscale.png',
    //aoMap: '/textures/lizard_lizard_shoes_Grayscale.png',
    //roughnessMap:'/textures/lizard_lizard_pants_Normal.png'
  });
  const shirt=useTexture({
    map: '/textures/lizard_lizard_shirt_BaseColor.png',
    //aoMap: '/textures/lizard_lizard_shoes_Grayscale.png',
    //roughnessMap:'/textures/lizard_lizard_pants_Normal.png'
  });
  const vest =useTexture({
    map: '/textures/lizard_lizard_vest_mtl_BaseColor.png',
    //displacementMap: '/textures/lizard_lizard_shoes_Grayscale.png',
    //aoMap: '/textures/lizard_lizard_shoes_Grayscale.png',
    //roughnessMap:'/textures/lizard_lizard_pants_Normal.png'
  });
  // eslint-disable-next-line
  const gloves=useTexture({
    map: '/textures/lizard_lizard__BaseColor.png',
    //displacementMap: '/textures/lizard_lizard_shoes_Grayscale.png',
    //aoMap: '/textures/lizard_lizard_shoes_Grayscale.png',
    //roughnessMap:'/textures/lizard_lizard_pants_Normal.png'
  });


  useEffect(() => {
    setAnimations(names);
    // eslint-disable-next-line
  }, [names]);
  useEffect(() => {
    const action = actions[names[animationIndex]];
    if (action) {
      action.reset().fadeIn(0.5).play();
      return () => {
        action.fadeOut(0.5);
      };
    }
  }, [animationIndex, actions, names]);
  // Update the material to make it more reflective


  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]} scale={0.0017}>
          <primitive object={nodes.mixamorigHips} />
          <group name="buttons003">
            <skinnedMesh  castShadow name="Mesh001" geometry={nodes.Mesh001.geometry} material={materials['lizard_button_thread_mtl.001']} skeleton={nodes.Mesh001.skeleton} />
            <skinnedMesh  castShadow name="Mesh001_1" geometry={nodes.Mesh001_1.geometry} material={materials['lizard_button_mtl.001']} skeleton={nodes.Mesh001_1.skeleton} />
          </group>
          <skinnedMesh  castShadow name="cigarette003" geometry={nodes.cigarette003.geometry} material={materials['lizard_cig_mtl.001']} skeleton={nodes.cigarette003.skeleton} />
          <skinnedMesh  castShadow name="eye_l003" geometry={nodes.eye_l003.geometry} material={materials['lizard_eyes_mtl.003']} skeleton={nodes.eye_l003.skeleton} >
          <meshStandardMaterial map={texturelizard_eye} map-flipY={false} skinning />
          </skinnedMesh>
          <skinnedMesh  castShadow name="eye_r003" geometry={nodes.eye_r003.geometry} material={materials['lizard_eyes_mtl.003']} skeleton={nodes.eye_r003.skeleton} >
          <meshStandardMaterial map={texturelizard_eye} map-flipY={false} skinning />
          </skinnedMesh>
          <skinnedMesh  castShadow name="gloves003" geometry={nodes.gloves003.geometry} material={materials['lizard_gloves_mtl.001']} skeleton={nodes.gloves003.skeleton} />
          <skinnedMesh  castShadow name="gum003" geometry={nodes.gum003.geometry} material={materials['gum_mtl.001']} skeleton={nodes.gum003.skeleton} />
          <skinnedMesh  castShadow name="head003" geometry={nodes.head003.geometry} material={materials['lizard_skin_mtl.003']} skeleton={nodes.head003.skeleton} >
          <meshStandardMaterial
              {... texturelizard_head}

              normalScale={[1, 1]} // Réglez cette valeur selon vos besoins
              map-flipY={false}
              skinning
            />
          </skinnedMesh >
          <skinnedMesh  castShadow name="jacket003" geometry={nodes.jacket003.geometry} material={materials['lizard_jacket_mtl.001']} skeleton={nodes.jacket003.skeleton}>
          <meshStandardMaterial  {...jacket} 
                        normalScale={[1, 1]} // Réglez cette valeur selon vos besoins
                        map-flipY={false}
                        skinning
          />
          </skinnedMesh >
          <skinnedMesh  castShadow name="pants003" geometry={nodes.pants003.geometry} material={materials['lizard_pants_mtl.001']} skeleton={nodes.pants003.skeleton} >
          <meshStandardMaterial  {...pants} 
                        normalScale={[1, 1]} // Réglez cette valeur selon vos besoins
                        map-flipY={false}
                        skinning
          />
          </skinnedMesh >
          <skinnedMesh  castShadow name="shirt003" geometry={nodes.shirt003.geometry} material={materials['lizard_shirt_mtl.001']} skeleton={nodes.shirt003.skeleton} >
          <meshStandardMaterial  {...shirt} 
                        normalScale={[1, 1]} // Réglez cette valeur selon vos besoins
                        map-flipY={false}
                        skinning
          />
          </skinnedMesh >
          <skinnedMesh  castShadow name="shoes003" geometry={nodes.shoes003.geometry} material={materials['lizard_shoes_mtl.001']} skeleton={nodes.shoes003.skeleton} >
          <meshStandardMaterial  {...shoes} 
                        normalScale={[1, 1]} // Réglez cette valeur selon vos besoins
                        map-flipY={false}
                        skinning
          /></skinnedMesh >
          <skinnedMesh  castShadow name="teeth003" geometry={nodes.teeth003.geometry} material={materials['teeth_mtl.001']} skeleton={nodes.teeth003.skeleton} />
          <skinnedMesh  castShadow name="vest003" geometry={nodes.vest003.geometry} material={materials['lizard_vest_mtl.003']} skeleton={nodes.vest003.skeleton} >
          <meshStandardMaterial  {...vest} 
                        normalScale={[1, 1]} // Réglez cette valeur selon vos besoins
                        map-flipY={false}
                        skinning
          />
          </skinnedMesh >
        </group>
      </group>
    </group>
  )
}

export default Avatar
useGLTF.preload('/3D_assets/Avatar.glb')
